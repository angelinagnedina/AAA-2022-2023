import click
from time import time_ns
from typing import Any


class Pizza:
    """–ö–ª–∞—Å—Å, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–¥–µ—Ä–∂–∏—Ç –±–∞–∑–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–∏—Ü—Ü–µ."""
    SIZES = {
        'S': 1,
        'M': 2,
        'L': 3,
        'XL': 4
    }

    def __init__(self, pizza_name: str = '', size: str = '', icon: str = ''):
        self.pizza_name = pizza_name.lower()
        self.size = size
        self.ingredients: list = []
        self.icon = icon
        # –ö–æ–ª-–≤–æ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤ —Å–¥–µ–ª–∞–µ–º –∑–∞–≤–∏—Å–∏–º—ã–º –æ—Ç —Ä–∞–∑–º–µ—Ä–∞
        self.multiplier = self.SIZES[size]

    def dict(self) -> dict:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –¥–ª—è –ø–∏—Ü—Ü—ã –≤ –≤–∏–¥–µ —Å–ª–æ–≤–∞—Ä—è."""
        ingredients_dict = {}

        for ingredient, amount, count in self.ingredients:
            ingredients_dict[ingredient] = f'{self.multiplier * amount}{count}'

        return ingredients_dict

    def __eq__(self, other) -> bool:
        """–°—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç –¥–≤–µ –ø–∏—Ü—Ü—ã."""
        # –£–¥–æ—Å—Ç–æ–≤–µ—Ä–∏–º—Å—è, —á—Ç–æ —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º –ø–∏—Ü—Ü—É —Å –ø–∏—Ü—Ü–µ–π.
        assert isinstance(other, Pizza), f'{other} is not a pizza!'
        return self.pizza_name == other.pizza_name and self.size == other.size


class Margherita(Pizza):
    def __init__(self, size: str = 'S'):
        super().__init__('margherita', size, 'üßÄ')
        self.ingredients = [
            ('tomato sauce', 100, 'ml'),
            ('mozzarella', 300, 'g'),
            ('tomatoes', 2, '')
        ]


class Pepperoni(Pizza):
    def __init__(self, size: str = 'S'):
        super().__init__('pepperoni', size, 'üçï')
        self.ingredients = [
            ('tomato sauce', 80, 'ml'),
            ('mozzarella', 100, 'g'),
            ('pepperoni', 150, 'g')
        ]


class Hawaiian(Pizza):
    def __init__(self, size: str = 'S'):
        super().__init__('hawaiian', size, 'üçç')
        self.ingredients = [
            ('tomato sauce', 60, 'ml'),
            ('mozzarella', 200, 'g'),
            ('chicken', 200, 'g'),
            ('pineapples', 100, 'g')
        ]


def log(pattern: str):
    """–î–µ–∫–æ—Ä–∞—Ç–æ—Ä, –ø—Ä–∏–Ω–∏–º–∞—é—â–∏–π —à–∞–±–ª–æ–Ω, –≤ –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –≤—Ä–µ–º—è."""
    def decorator(func):
        def wrapper(*args, **kwargs):
            time_start = time_ns()
            res = func(*args, **kwargs)
            # –ï—Å–ª–∏ –∑–∞–∫–∞–∑–∞–ª–∏ –ø–∏—Ü—Ü—É –Ω–µ –∏–∑ –º–µ–Ω—é - –≤—Ä–µ–º—è –≥–æ—Ç–æ–≤–∫–∏ –Ω–µ –≤—ã–≤–æ–¥–∏–º
            if res:
                time_end = time_ns()
                print(pattern.format(time_end - time_start))
            return res
        return wrapper
    return decorator


@log('üöó –î–æ—Å—Ç–∞–≤–∏–ª–∏ –∑–∞ {} c.')
def deliver() -> bool:
    return True


@log('‚Äçüç≥ –ü—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∏ –∑–∞ {} —Å.')
def cook(pizza: str, size: str = '') -> Any:
    pizza = pizza.lower()
    dish: Any = None

    if pizza == 'margherita':
        dish = Margherita(size)
    elif pizza == 'pepperoni':
        dish = Pepperoni(size)
    elif pizza == 'hawaiian':
        dish = Hawaiian(size)

    return dish


@click.group()
def cli():
    pass


@cli.command()
@click.option('--delivery', default=False, is_flag=True)
@click.argument('pizza', nargs=1)
@click.argument('size', nargs=1, default='S')
def order(pizza: str, size: str, delivery: bool):
    """–ì–æ—Ç–æ–≤–∏—Ç –∏ –¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–∏—Ü—Ü—É."""
    # –ï—Å–ª–∏ —Ä–∞–∑–º–µ—Ä –ø–∏—Ü—Ü—ã –Ω–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π - —Å–æ–æ–±—â–∞–µ–º –æ–± —ç—Ç–æ–º.
    if size not in Pizza.SIZES:
        print('–í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π —Ä–∞–∑–º–µ—Ä.')
    else:
        dish = cook(pizza, size)

        # –ï—Å–ª–∏ –ø–∏—Ü—Ü—ã –Ω–µ –æ–∫–∞–∑–∞–ª–æ—Å—å –≤ –º–µ–Ω—é - —Å–æ–æ–±—â–∞–µ–º –æ–± —ç—Ç–æ–º.
        if dish is None:
            print('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø–∏—Ü—Ü—É –∏–∑ –º–µ–Ω—é.')
        elif delivery:
            deliver()


@cli.command()
def menu():
    """–í—ã–≤–æ–¥–∏—Ç –º–µ–Ω—é."""
    pizzas = [Margherita(), Pepperoni(), Hawaiian()]
    for pizza in pizzas:
        products = ', '.join(pizza.dict().keys())
        click.echo(f'{pizza.pizza_name.capitalize()} {pizza.icon}: {products}')


if __name__ == '__main__':
    cli()
